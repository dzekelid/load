{
	"name": "Streadata.io API Gallery - Load",
	"description": "This is a repository of load APIs, self-contained as a Github repository, with HTML and YAML representations of the APIs and their surrounding operations.",
	"image": "http://template.streamdata.gallery/assets/load.png",
	"created": "2018-02-24",
	"modified": "2018-08-28",
	"url": "http://load.streamdata.gallery/apis.json",
	"specificationVersion": "0.14",
	"apis": [
		{
			"name": "VMWare",
			"x-api-slug": "vmware",
			"description": "At VMware, we believe that software has the power to unlock new opportunities for people and our planet. We look beyond the barriers of compromise to engineer new ways to make technologies work together seamlessly. Our software forms a digital foundation that powers the apps, services and experiences that are transforming the world.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/VMware_logo.png",
			"humanURL": "http://vmware.com",
			"baseURL": "https://example.com//suite-api/api",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/vmware/openapi.md"
				}
			]
		},
		{
			"name": "AWS OpsWorks",
			"x-api-slug": "aws-opsworks",
			"description": "AWS OpsWorks is a configuration management service that uses Chef, an automation platform that treats server configurations as code. OpsWorks uses Chef to automate how servers are configured, deployed, and managed across your Amazon Elastic Compute Cloud (Amazon EC2) instances or on-premises compute environments. OpsWorks has two offerings, AWS Opsworks for Chef Automate, and AWS OpsWorks Stacks.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Management-Tools_AWSOpsWorks.png",
			"humanURL": "https://aws.amazon.com/opsworks/",
			"baseURL": ":///",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-opsworks/openapi.md"
				}
			]
		},
		{
			"name": "AWS Auto Scaling",
			"x-api-slug": "aws-auto-scaling",
			"description": "Auto Scaling helps you maintain application availability and allows you to scale yourAmazon EC2capacity up or down automatically according to conditions you define. You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances. Auto Scaling can also automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs. Auto Scaling is well suited both to applications that have stable demand patterns or that experience hourly, daily, or weekly variability in usage.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_AmazonEC2_AutoScaling.png",
			"humanURL": "https://aws.amazon.com/autoscaling/",
			"baseURL": ":///",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-auto-scaling/openapi.md"
				}
			]
		},
		{
			"name": "AWS Elastic Load Balancing",
			"x-api-slug": "aws-elastic-load-balancing",
			"description": "Elastic Load Balancing automatically distributes incoming application traffic across multiple Amazon EC2 instances. It enables you to achieve fault tolerance in your applications, seamlessly providing the required amount of load balancing capacity needed to route application traffic.Elastic Load Balancing offers two types of load balancers that both feature high availability, automatic scaling, and robust security. These include theClassic Load Balancerthat routes traffic based on either application or network level information, and theApplication Load Balancerthat routes traffic based on advanced application level information that includes the content of the request. The Classic Load Balancer is ideal for simple load balancing of traffic across multiple EC2 instances, while the Application Load Balancer is ideal for applications needing advanced routing capabilities, microservices, and container-based architectures. Application Load Balancer offers ability to route traffic to multiple services or load balance across multiple ports on the same EC2 instance.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Compute_ElasticLoadBalancing.png",
			"humanURL": "https://aws.amazon.com/elasticloadbalancing/",
			"baseURL": ":///",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-elastic-load-balancing/openapi.md"
				}
			]
		},
		{
			"name": "AWS Route 53",
			"x-api-slug": "aws-route-53",
			"description": "Amazon Route 53 is a highly available and scalable cloud Domain Name System (DNS) web service. It is designed to give developers and businesses an extremely reliable and cost effective way to route end users to Internet applications by translating names like www.example.com into the numeric IP addresses like 192.0.2.1 that computers use to connect to each other. Amazon Route 53 is fully compliant with IPv6 as well.Amazon Route 53 effectively connects user requests to infrastructure running in AWS &ndash; such as Amazon EC2 instances, Elastic Load Balancing load balancers, or Amazon S3 buckets &ndash; and can also be used to route users to infrastructure outside of AWS. You can use Amazon Route 53 to configure DNS health checks to route traffic to healthy endpoints or to independently monitor the health of your application and its endpoints. Amazon Route 53 Traffic Flow makes it easy for you to manage traffic globally through a variety of routing types, including Latency Based Routing, Geo DNS, and Weighted Round Robin&mdash;all of which can be combined with DNS Failover in order to enable a variety of low-latency, fault-tolerant architectures. Using Amazon Route 53 Traffic Flow&rsquo;s simple visual editor, you can easily manage how your end-users are routed to your application&rsquo;s endpoints&mdash;whether in a single AWS region or distributed around the globe. Amazon Route 53 also offers Domain Name Registration &ndash; you can purchase and manage domain names such as example.com and Amazon Route 53 will automatically configure DNS settings for your domains.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/Networking_AmazonRoute53.png",
			"humanURL": "https://aws.amazon.com/route53/",
			"baseURL": ":///",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-route-53/openapi.md"
				}
			]
		},
		{
			"name": "Avaza",
			"x-api-slug": "avaza",
			"description": "Avaza is a beautiful online software suite with modules for Project Management, Timesheets, Expenses &amp; Invoicing. Access from anywhere, with any device. Avaza is the leading all-in-one software for running client focused businesses. Avaza allows businesses of all sizes to more easily and effectively manage team projects, time tracking, expense reporting, quoting &amp; invoicing. It can be accessed simply via a web browser from anywhere in the world on any device.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28373-avaza.jpg",
			"humanURL": "https://www.avaza.com",
			"baseURL": "https:///",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/avaza/openapi.md"
				}
			]
		},
		{
			"name": "Predix",
			"x-api-slug": "predix",
			"description": "Predix (IoT PaaS) helps you develop apps that connect people with industrial machines through analytics and data for better business outcomes.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/predix-vector-logo.png",
			"humanURL": "https://www.predix.io",
			"baseURL": "https:////v1",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/predix/openapi.md"
				}
			]
		},
		{
			"name": "RipaEx",
			"x-api-slug": "ripaex",
			"description": "Ripa Exchange is an hybrid-decentralized exchange with a strong focus on lowering the entry level for opening new exchanges and giving crypto traders safe and secure trading partners to operate on a daily basis.",
			"image": "http://kinlane-productions.s3.amazonaws.com/screen-capture-api/28880-ripaex-io.jpg",
			"humanURL": "http://www.ripaex.io",
			"baseURL": "https://api.ripaex.io//",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/ripaex/openapi.md"
				}
			]
		},
		{
			"name": "Plentymarkets",
			"x-api-slug": "plentymarkets",
			"description": "plentymarkets is an all-in-one e-commerce ERP solution, which combines a comprehensive stock management system with a versatile shop system and effortless multichannel sales. Thanks to comprehensive functions and interfaces that include all steps of the e-commerce value chain, you can use the cloud based software to completely automate all of your e-business processes as well as your companys own individual processes.",
			"image": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/plentymarkets.png",
			"humanURL": "http://www.plentymarkets.co.uk",
			"baseURL": "https://example.com//",
			"tags": "Load",
			"properties": [
				{
					"type": "x-openapi-spec",
					"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/plentymarkets/openapi.md"
				}
			]
		}
	],
	"tags": "Load",
	"include": [
		{
			"name": "VMWare",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/vmware/apis.yaml"
		},
		{
			"name": "AWS OpsWorks",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-opsworks/apis.yaml"
		},
		{
			"name": "AWS Auto Scaling",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-auto-scaling/apis.yaml"
		},
		{
			"name": "AWS Elastic Load Balancing",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-elastic-load-balancing/apis.yaml"
		},
		{
			"name": "AWS Route 53",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/aws-route-53/apis.yaml"
		},
		{
			"name": "Avaza",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/avaza/apis.yaml"
		},
		{
			"name": "Predix",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/predix/apis.yaml"
		},
		{
			"name": "RipaEx",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/ripaex/apis.yaml"
		},
		{
			"name": "Plentymarkets",
			"url": "https://raw.githubusercontent.com/streamdata-gallery-topics/load/master/_listings/plentymarkets/apis.yaml"
		}
	]
}